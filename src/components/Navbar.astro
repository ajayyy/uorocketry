---
type Link = {
	url: string;
	text: string;
};

const links = [
	{
		url: "/",
		text: "Home",
	},
	...(await Astro.glob("../pages/*"))
		.map(page => {
			const name = page.url.split("/").pop();
			if (!name || name == "index") return;
			return {
				url: `/${name}`,
				text: name.charAt(0).toUpperCase() + name.slice(1),
			};
		})
		.filter((x): x is Link => !!x),
] as Link[];

const { active } = Astro.props;
---

<nav class="pt-4 sm:text-xl">
	<ul class="flex flex-wrap justify-center">
		{
			links.map(link => (
				<li
					class={
						active === "Home"
							? link.text === "Home"
								? "text-indigo-700"
								: "text-indigo-900"
							: active === link.text
							? "text-indigo-300"
							: "text-indigo-100"
					}
				>
					<a
						href={link.url}
						class="block border-b-2 border-transparent px-6 py-4 transition-colors duration-200 hover:border-current"
					>
						{link.text}
					</a>
				</li>
			))
		}
	</ul>
</nav>
